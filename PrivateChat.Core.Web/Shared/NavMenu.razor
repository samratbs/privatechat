@inject IUserService userService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Private Chat</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="Logout" style="cursor:pointer">
                <MudIcon Icon="@Icons.Filled.Logout" Title=" Logout" style="margin-right:9px;"/> Logout
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    [Inject] private IDialogService DialogService { get; set; }
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private async void Logout()
    {   
        bool? result = await DialogService.ShowMessageBox(
            "Log Out?",
            "You will Log Out of this account but can Login anytime.",
            yesText: "Yes", cancelText: "No");
        if (result!=null)
        {
            await userService.Logout();
        }
        StateHasChanged();
       
    }
}
